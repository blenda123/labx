policy_module(labx, 1.100.1)

########################################
#
# Declarations
#

type labx_t;
type labx_exec_t;
init_daemon_domain(labx_t, labx_exec_t)

permissive labx_t;

type labx_initrc_exec_t;
init_script_file(labx_initrc_exec_t)

type labx_conf_t;
files_type(labx_conf_t)

type labx_var_lib_t;
files_type(labx_var_lib_t)

type labx_var_run_t;
files_type(labx_var_run_t)

type labx_port_t;
corenet_port(labx_port_t)

########################################
#
# labx local policy
#
allow labx_t self:process { fork };

allow labx_t self:fifo_file rw_fifo_file_perms;
allow labx_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(labx_t, labx_conf_t, labx_conf_t)
manage_files_pattern(labx_t, labx_conf_t, labx_conf_t)

manage_dirs_pattern(labx_t, labx_var_lib_t, labx_var_lib_t)
manage_files_pattern(labx_t, labx_var_lib_t, labx_var_lib_t)
files_var_lib_filetrans(labx_t, labx_var_lib_t, { dir file })

manage_dirs_pattern(labx_t, labx_var_run_t, labx_var_run_t)
manage_files_pattern(labx_t, labx_var_run_t, labx_var_run_t)

sysnet_dns_name_resolve(labx_t)
corenet_all_recvfrom_unlabeled(labx_t)

allow labx_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(labx_t)
corenet_tcp_sendrecv_generic_node(labx_t)
corenet_tcp_sendrecv_all_ports(labx_t)
corenet_tcp_bind_generic_node(labx_t)

gen_require(`
    type labx_port_t;
')
allow labx_t labx_port_t:tcp_socket name_bind;

gen_require(`
    type labx_port_t;
')
allow labx_t labx_port_t:tcp_socket name_connect;

domain_use_interactive_fds(labx_t)

files_read_etc_files(labx_t)

miscfiles_read_localization(labx_t)

sysnet_dns_name_resolve(labx_t)

allow labx_t labx_exec_t:file execute_no_trans;
allow labx_t self:process setsched;
corecmd_exec_ls(labx_t)
corenet_tcp_connect_http_port(labx_t)
dev_read_urand(labx_t)
fs_getattr_xattr_fs(labx_t)
kernel_read_system_state(labx_t)
